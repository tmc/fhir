//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

syntax = "proto3";

package google.fhir.r4.core;

import "google/protobuf/any.proto";
import "proto/google/fhir/proto/annotations.proto";
import "proto/google/fhir/proto/r4/core/codes.proto";
import "proto/google/fhir/proto/r4/core/datatypes.proto";
import "proto/google/fhir/proto/r4/core/extensions.proto";

option java_multiple_files = true;
option java_package = "com.google.fhir.r4.core";
option go_package = "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/profiles/profile_for_hla_genotyping_results_go_proto";
option (.google.fhir.proto.fhir_version) = R4;

// Auto-generated from StructureDefinition for Profile for HLA Genotyping
// Results. A Diagnostic report - a combination of request information, atomic
// results, images, interpretation, as well as formatted reports. See
// http://hl7.org/fhir/StructureDefinition/hlaresult
message ProfileForHLAGenotypingResults {
  option (.google.fhir.proto.structure_definition_kind) = KIND_RESOURCE;
  option (.google.fhir.proto.fhir_profile_base) =
      "http://hl7.org/fhir/StructureDefinition/DiagnosticReport";
  option (.google.fhir.proto.fhir_structure_definition_url) =
      "http://hl7.org/fhir/StructureDefinition/hlaresult";
  option (.google.fhir.proto.search_parameter) = {
    name: "assessed-condition"
    type: REFERENCE
    expression: "DiagnosticReport.extension('http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAssessedCondition')"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "based-on"
    type: REFERENCE
    expression: "DiagnosticReport.basedOn"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "category"
    type: TOKEN
    expression: "DiagnosticReport.category"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "code"
    type: TOKEN
    expression: "AllergyIntolerance.code | AllergyIntolerance.reaction.substance | Condition.code | (DeviceRequest.code as CodeableConcept) | DiagnosticReport.code | FamilyMemberHistory.condition.code | List.code | Medication.code | (MedicationAdministration.medication as CodeableConcept) | (MedicationDispense.medication as CodeableConcept) | (MedicationRequest.medication as CodeableConcept) | (MedicationStatement.medication as CodeableConcept) | Observation.code | Procedure.code | ServiceRequest.code"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "conclusion"
    type: TOKEN
    expression: "DiagnosticReport.conclusionCode"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "date"
    type: DATE
    expression: "AllergyIntolerance.recordedDate | CarePlan.period | CareTeam.period | ClinicalImpression.date | Composition.date | Consent.dateTime | DiagnosticReport.effective | Encounter.period | EpisodeOfCare.period | FamilyMemberHistory.date | Flag.period | Immunization.occurrence | List.date | Observation.effective | Procedure.performed | (RiskAssessment.occurrence as dateTime) | SupplyRequest.authoredOn"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "encounter"
    type: REFERENCE
    expression: "Composition.encounter | DeviceRequest.encounter | DiagnosticReport.encounter | DocumentReference.context.encounter | Flag.encounter | List.encounter | NutritionOrder.encounter | Observation.encounter | Procedure.encounter | RiskAssessment.encounter | ServiceRequest.encounter | VisionPrescription.encounter"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "identifier"
    type: TOKEN
    expression: "AllergyIntolerance.identifier | CarePlan.identifier | CareTeam.identifier | Composition.identifier | Condition.identifier | Consent.identifier | DetectedIssue.identifier | DeviceRequest.identifier | DiagnosticReport.identifier | DocumentManifest.masterIdentifier | DocumentManifest.identifier | DocumentReference.masterIdentifier | DocumentReference.identifier | Encounter.identifier | EpisodeOfCare.identifier | FamilyMemberHistory.identifier | Goal.identifier | ImagingStudy.identifier | Immunization.identifier | List.identifier | MedicationAdministration.identifier | MedicationDispense.identifier | MedicationRequest.identifier | MedicationStatement.identifier | NutritionOrder.identifier | Observation.identifier | Procedure.identifier | RiskAssessment.identifier | ServiceRequest.identifier | SupplyDelivery.identifier | SupplyRequest.identifier | VisionPrescription.identifier"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "issued"
    type: DATE
    expression: "DiagnosticReport.issued"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "media"
    type: REFERENCE
    expression: "DiagnosticReport.media.link"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "patient"
    type: REFERENCE
    expression: "AllergyIntolerance.patient | CarePlan.subject.where(resolve() is Patient) | CareTeam.subject.where(resolve() is Patient) | ClinicalImpression.subject.where(resolve() is Patient) | Composition.subject.where(resolve() is Patient) | Condition.subject.where(resolve() is Patient) | Consent.patient | DetectedIssue.patient | DeviceRequest.subject.where(resolve() is Patient) | DeviceUseStatement.subject | DiagnosticReport.subject.where(resolve() is Patient) | DocumentManifest.subject.where(resolve() is Patient) | DocumentReference.subject.where(resolve() is Patient) | Encounter.subject.where(resolve() is Patient) | EpisodeOfCare.patient | FamilyMemberHistory.patient | Flag.subject.where(resolve() is Patient) | Goal.subject.where(resolve() is Patient) | ImagingStudy.subject.where(resolve() is Patient) | Immunization.patient | List.subject.where(resolve() is Patient) | MedicationAdministration.subject.where(resolve() is Patient) | MedicationDispense.subject.where(resolve() is Patient) | MedicationRequest.subject.where(resolve() is Patient) | MedicationStatement.subject.where(resolve() is Patient) | NutritionOrder.patient | Observation.subject.where(resolve() is Patient) | Procedure.subject.where(resolve() is Patient) | RiskAssessment.subject.where(resolve() is Patient) | ServiceRequest.subject.where(resolve() is Patient) | SupplyDelivery.patient | VisionPrescription.patient"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "performer"
    type: REFERENCE
    expression: "DiagnosticReport.performer"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "result"
    type: REFERENCE
    expression: "DiagnosticReport.result"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "results-interpreter"
    type: REFERENCE
    expression: "DiagnosticReport.resultsInterpreter"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "specimen"
    type: REFERENCE
    expression: "DiagnosticReport.specimen"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "status"
    type: TOKEN
    expression: "DiagnosticReport.status"
  };
  option (.google.fhir.proto.search_parameter) = {
    name: "subject"
    type: REFERENCE
    expression: "DiagnosticReport.subject"
  };

  // Logical id of this artifact
  Id id = 1;

  // Metadata about the resource
  Meta meta = 2;

  // A set of rules under which this content was created
  Uri implicit_rules = 3;

  // Language of the resource content
  Code language = 4;

  // Text summary of the resource, for human interpretation
  Narrative text = 5;

  // Contained, inline Resources
  repeated protobuf.Any contained = 6;

  // Field 7 reserved for strongly-typed ContainedResource for id:
  // DiagnosticReport.contained
  reserved 7;

  // Extension
  repeated Extension extension = 8;

  // Extensions that cannot be ignored
  repeated Extension modifier_extension = 9;

  // Business identifier for report
  repeated Identifier identifier = 10;

  // What was requested
  repeated Reference based_on = 11 [
    (.google.fhir.proto.valid_reference_type) = "CarePlan",
    (.google.fhir.proto.valid_reference_type) = "ImmunizationRecommendation",
    (.google.fhir.proto.valid_reference_type) = "MedicationRequest",
    (.google.fhir.proto.valid_reference_type) = "NutritionOrder",
    (.google.fhir.proto.valid_reference_type) = "ServiceRequest"
  ];

  // registered | partial | preliminary | final +
  message StatusCode {
    option (.google.fhir.proto.structure_definition_kind) = KIND_PRIMITIVE_TYPE;
    option (.google.fhir.proto.fhir_valueset_url) =
        "http://hl7.org/fhir/ValueSet/diagnostic-report-status";
    option (.google.fhir.proto.fhir_profile_base) =
        "http://hl7.org/fhir/StructureDefinition/code";

    DiagnosticReportStatusCode.Value value = 1;

    String id = 2;

    repeated Extension extension = 3;
  }
  StatusCode status = 12
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // Service category
  repeated CodeableConcept category = 13;

  // Name/Code for this diagnostic report
  CodeableConcept code = 14
      [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];

  // The subject of the report - usually, but not always, the patient
  Reference subject = 15 [
    (.google.fhir.proto.valid_reference_type) = "Patient",
    (.google.fhir.proto.valid_reference_type) = "Group",
    (.google.fhir.proto.valid_reference_type) = "Device",
    (.google.fhir.proto.valid_reference_type) = "Location"
  ];

  // Health care event when test ordered
  Reference encounter = 16
      [(.google.fhir.proto.valid_reference_type) = "Encounter"];

  // Clinically relevant time/time-period for report
  message EffectiveX {
    option (.google.fhir.proto.is_choice_type) = true;

    oneof choice {
      DateTime date_time = 1;
      Period period = 2;
    }
  }
  EffectiveX effective = 17;

  // DateTime this version was made
  Instant issued = 18;

  // Responsible Diagnostic Service
  repeated Reference performer = 19 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Primary result interpreter
  repeated Reference results_interpreter = 20 [
    (.google.fhir.proto.valid_reference_type) = "Practitioner",
    (.google.fhir.proto.valid_reference_type) = "PractitionerRole",
    (.google.fhir.proto.valid_reference_type) = "Organization",
    (.google.fhir.proto.valid_reference_type) = "CareTeam"
  ];

  // Specimens this report is based on
  repeated Reference specimen = 21
      [(.google.fhir.proto.valid_reference_type) = "Specimen"];

  // Observations
  repeated Reference result = 22
      [(.google.fhir.proto.valid_reference_type) = "Observation"];

  // Reference to full details of imaging associated with the diagnostic report
  repeated Reference imaging_study = 23
      [(.google.fhir.proto.valid_reference_type) = "ImagingStudy"];

  // Key images associated with this report
  message Media {
    // Unique id for inter-element referencing
    String id = 1;

    // Additional content defined by implementations
    repeated Extension extension = 2;

    // Extensions that cannot be ignored even if unrecognized
    repeated Extension modifier_extension = 3;

    // Comment about the image (e.g. explanation)
    String comment = 4;

    // Reference to the image source
    Reference link = 5 [
      (.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR,
      (.google.fhir.proto.valid_reference_type) = "Media"
    ];
  }
  repeated Media media = 24;

  // Clinical conclusion (interpretation) of test results
  String conclusion = 25;

  // Codes for the clinical conclusion of test results
  repeated CodeableConcept conclusion_code = 26;

  // Entire report as issued
  repeated Attachment presented_form = 27;

  // Allele Database
  CodeableConcept allele_database = 28 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-allele-database"
  ];

  // Glstring
  DiagnosticReportGlstring glstring = 29 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-glstring"
  ];

  // Haploid
  repeated DiagnosticReportHaploid haploid = 30 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-haploid"
  ];

  // The platform, methodology and software applied at the time of the
  // genotyping
  CodeableConcept method = 31 [
    (.google.fhir.proto.fhir_inlined_extension_url) =
        "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-method"
  ];
}
